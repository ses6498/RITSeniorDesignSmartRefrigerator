package edu.rit.smartFridge.util;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import com.j256.ormlite.dao.Dao;
import com.j256.ormlite.dao.DaoManager;
import com.j256.ormlite.jdbc.JdbcConnectionSource;
import com.j256.ormlite.stmt.QueryBuilder;
import com.j256.ormlite.support.ConnectionSource;

import edu.rit.smartFridge.model.InventoryItem;
import edu.rit.smartFridge.model.ShoppingList;
import edu.rit.smartFridge.model.ShoppingListItem;

public class ormliteConnect implements DataConnect
{
	// the DAO objects we use to access the our model
	private Dao<InventoryItem, Integer> inventoryItemDao = null;
	private Dao<ShoppingList, Integer> shoppingListDao = null;
	private Dao<ShoppingListItem, Integer> shoppingListItemDao = null;

	/**
	 * Autogenerated UID for serialization
	 */
	private static final long serialVersionUID = -244775505247558467L;
	
	public ormliteConnect()
	{
		ConnectionSource c = null;
		try
		{
			c = new com.j256.ormlite.jdbc.JdbcConnectionSource("jdbc:mysql://smartfridge.student.rit.edu/smartRefrigeratorDb");
			inventoryItemDao = DaoManager.createDao(c, InventoryItem.class);
			inventoryItemDao = DaoManager.createDao(c, ShoppingList.class);
			inventoryItemDao = DaoManager.createDao(c, ShoppingListItem.class);
		} 
		catch (SQLException e)
		{
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
				
	}

//	/**
//	 * You'll need this in your class to get the helper from the manager once
//	 * per class.
//	 */
//	private DatabaseHelper getHelper()
//	{
//		if (databaseHelper == null)
//		{
//			databaseHelper = OpenHelperManager.getHelper(context,
//					DatabaseHelper.class);
//		}
//		return databaseHelper;
//	}
	
	/**
	 * Returns the Shopping Lists stored in the database.
	 */
	public List<ShoppingList> getLists()
	{
		List<ShoppingList> list = null;
		try
		{
			// query for all of the data objects in the database
			list = shoppingListDao.queryForAll();
		} catch (java.sql.SQLException e)
		{
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return list;
	}

	/**
	 * Returns the Shopping List with the specified ID
	 * 
	 * @param listId the ID of the list to return
	 */
	public ShoppingList getList(long listId)
	{
		ShoppingList list = null;
		try
		{
			// query for the list in the database with the specified ID
			list = shoppingListDao.queryForId((int) listId);
		} catch (java.sql.SQLException e)
		{
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return list;
	}

	public ShoppingList populateItems(ShoppingList list)
	{
		try
		{
			shoppingListItemDao.queryForAll();
		}
		catch (SQLException e)
		{
			// TODO something in this exception
		}
		return list;
	}

	public List<InventoryItem> getInventory()
	{
		List<InventoryItem> retList = new ArrayList<InventoryItem>();
		try
		{
			retList = inventoryItemDao.queryForAll();
		}
		catch (SQLException e)
		{
			
		}
		return retList;
	}

	public List<InventoryItem> getItem(long UPC)
	{
		List<InventoryItem> retList = new ArrayList<InventoryItem>();
		try
		{
			QueryBuilder<InventoryItem, Integer> q = inventoryItemDao.queryBuilder();
			q.where().eq("UPC", UPC);
			retList = inventoryItemDao.query(q.prepare());
		}
		catch (SQLException e)
		{
			
		}
		return retList;
	}

	public int getItemCount(long UPC)
	{
		return 0;
	}

	public List<Date> getExpirationDates(long UPC)
	{
		// TODO Auto-generated method stub
		return null;
	}

	public List<Date> getPurchaseDates(long UPC)
	{
		// TODO Auto-generated method stub
		return null;
	}

}
