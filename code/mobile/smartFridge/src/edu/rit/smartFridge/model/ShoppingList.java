package edu.rit.smartFridge.model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.UUID;

public class ShoppingList implements Serializable
{
	/**
	 * autogenerated serial version UID
	 */
	private static final long serialVersionUID = 7795007221701877658L;
	
	/**
	 * The integer of the list
	 */
	private int ID;
	
	/**
	 * items contains lists of items, organized by name. 
	 * Searching for [name] in this map returns a list of items by that name.
	 */
	private HashMap<String, List<InventoryItem>> items;
	
	/**
	 * The name of the shopping list
	 */
	private String name;
	
	/**
	 * True if the list was created by the item suggester, false otherwise.
	 */
	private boolean autoGen; 
	
	/**
	 * Shopping List constructor
	 * 
	 * @param name The name of the {@code ShoppingList}
	 * @param id The integer ID of the {@code ShoppingList}
	 * @param autoGen Whether the {@code ShoppingList} was autogenerated
	 */
	public ShoppingList(String name, boolean autoGen)
	{
		this.name = name;
		this.autoGen = autoGen;
		items = new HashMap<String, List<InventoryItem>>();
	}
	
	/**
	 * Shopping List constructor
	 * 
	 * @param name The name of the shopping list
	 */
	public ShoppingList(String name)
	{
		this(name, false);
	}
	
	/**
	 * Gets the ID of the shopping list
	 * 
	 * @return
	 */
	public int getID()
	{
		return ID;
	}
	
	/**
	 * Adds an item to the grocery list
	 * 
	 * @param item The item to add.
	 */
	public void addItem(InventoryItem item, int count)
	{
		if (!items.containsKey(item.getName()))
		{
			items.put(item.getName(), new ArrayList<InventoryItem>());
		}
		
		for (int i = 0; i < count; i++)
		{
			items.get(item.getName()).add(item);
		}
	}
	
	/**
	 * Searches the grocery list for an item with the given name
	 * and returns it.
	 * 
	 * @param name The name of the item to return.
	 * @return The item with the given name.
	 */
	public List<InventoryItem> getItemByName(String name)
	{
		if (items.containsKey(name))
		{
			return items.get(name);
		}
		else
		{
			return null;
		}
	}
	
	/**
	 * Searches the grocery list for an item with the given UPC
	 * and returns it.
	 * 
	 * @param UPC The UPC code of the item to return.
	 * @return The item with the given UPC code.
	 */
	public InventoryItem getItemByUPC(int UPC)
	{
//		Iterator<InventoryItem> iter = items.iterator();
//		InventoryItem temp;
//		
//		while (iter.hasNext())
//		{
//			temp = iter.next();
//			if (temp.getUPC() == UPC)
//			{
//				return temp;
//			}
//		}
		return null;
	}
	
	/**
	 * Gets all items contained in the list
	 * 
	 * @return The list of items
	 */
	public HashMap<String, List<InventoryItem>> getAllItems()
	{
		return items;
	}
	
	/**
	 * Gets the name of the grocery list.
	 * 
	 * @return The name of the list.
	 */
	public String getName()
	{
		return name;
	}
	
	/**
	 * Gives the grocery list a new name
	 * 
	 * @param newName The new name of the list.
	 */
	public void setName(String newName)
	{
		name = newName;
	}
	
	/**
	 * Returns a boolean representation of whether the list was aut-generated.
	 * 
	 * @return True if the list was auto-generated, false otherwise.
	 */
	public boolean isAutoGen()
	{
		return autoGen;
	}
}
